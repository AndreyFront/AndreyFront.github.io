{"version":3,"file":"scripts.482d9020859dd367a16e.js","mappings":"mBAEAA,OAAOC,OAEP,WACI,IAAIC,EAAW,EACXC,EAAe,EAKbC,EAAYJ,OAAOK,WAAW,uBAC9BC,EAAcN,OAAOK,WAAW,sBAChCE,EAAWP,OAAOK,WAAW,sBAE/BD,EAAUI,UAASL,EAAe,GAClCG,EAAYE,UAASL,EAAe,GACpCI,EAASC,UAASL,EAAe,GAErC,IAAMM,EAASC,SAASC,cAAc,WAGhCC,GADWH,EAAOE,cAAc,iBACtBF,EAAOE,cAAc,qBAC/BE,EAAaJ,EAAOE,cAAc,wBAClCG,EAAQL,EAAOM,iBAAiB,UAChCC,EAAUP,EAAOE,cAAc,wBAC/BM,EAAUR,EAAOE,cAAc,wBAE/BO,EAAcJ,EAAMK,OACpBC,EAAaR,EAAQS,YAAclB,EACnCmB,EAvBiB,EAuBeF,EAEtCN,EAAMS,SAAQ,SAAAC,GACVA,EAAKC,MAAMC,MAAQN,EAAa,QAGpCJ,EAAQW,iBAAiB,SAAS,WAC9BX,EAAQY,aAAa,aAAc,IACnCC,OAGJZ,EAAQU,iBAAiB,SAAS,WAC9BV,EAAQW,aAAa,aAAc,IACnCE,OAGJ,IA4BQC,EACAC,EA7BFC,EAAc,SAAC/B,GACjBW,EAAWY,MAAMS,UAAjB,qBAA2ChC,EAA3C,OACAiC,KAGEA,EAAY,WACA,IAAbjC,EAAkBc,EAAQY,aAAa,WAAY,IAAMZ,EAAQoB,gBAAgB,YAEjFlC,KAAcgB,EAAcf,GAAgBiB,EAAcH,EAAQW,aAAa,WAAY,IAAMX,EAAQmB,gBAAgB,aAGxHP,EAAW,WACb,IAAKb,EAAQqB,aAAa,YAAa,CACnC,IAAMC,EAAaC,KAAKC,IAAItC,GAAYkB,EAExCa,EADA/B,GAAYoC,GArDG,EAqD4BhB,EAAegB,EAAalB,KAKzEU,EAAW,WACb,IAAKb,EAAQoB,aAAa,YAAa,CACnC,IAAMC,EAAapB,GAAeqB,KAAKC,IAAItC,GAAYC,EAAeiB,GAAcA,EAEpFa,EADA/B,GAAYoC,GA7DG,EA6D4BhB,EAAegB,EAAalB,KA0D/Ee,IApDQJ,EAAe,EACfC,EAAe,EAEnBnB,EAAWc,iBAAiB,eAAe,SAACc,GACxCT,EAAeS,EAAMC,MACrB7B,EAAWY,MAAMkB,OAAS,cAG9B9B,EAAWc,iBAAiB,aAAa,SAACc,GACtCV,EAAeC,GACfA,EAAeS,EAAMC,OACFX,GAAcD,IAC7BE,EAAeD,GAAcF,IACjChB,EAAWe,aAAa,mBAAoB,OArFxCgB,I","sources":["webpack://webpack-template/./src/main.js"],"sourcesContent":["import './main.scss'\n\nwindow.onload = loaded()\n\nfunction loaded() {\n    let position = 0\n    let slidesToShow = 4\n    const slidesToScroll = 1\n    const timeAutoSlide = 4000\n    const buttonDelay = 20000\n\n    const highQuery = window.matchMedia('(max-width: 1200px)')\n    const middleQuery = window.matchMedia('(max-width: 767px)')\n    const lowQuery = window.matchMedia('(max-width: 576px)')\n\n    if (highQuery.matches) slidesToShow = 3\n    if (middleQuery.matches) slidesToShow = 2\n    if (lowQuery.matches) slidesToShow = 1\n\n    const slider = document.querySelector('.slider')\n    \n    const timeLine = slider.querySelector('.slider__line')\n    const content = slider.querySelector('.slider__content')\n    const movingPart = slider.querySelector('.slider__moving-part')\n    const slide = slider.querySelectorAll('.slide')\n    const btnPrev = slider.querySelector('.slider__arrow--prev')\n    const btnNext = slider.querySelector('.slider__arrow--next')\n\n    const slidesCount = slide.length\n    const slideWidth = content.offsetWidth / slidesToShow\n    const movePosition = slidesToScroll * slideWidth\n\n    slide.forEach(elem => {\n        elem.style.width = slideWidth + 'px'\n    })\n\n    btnPrev.addEventListener('click', () => {\n        btnPrev.setAttribute('data-click', '')\n        movePrev()\n    })\n\n    btnNext.addEventListener('click', () => {\n        btnNext.setAttribute('data-click', '')\n        moveNext()\n    })\n    \n    const setPosition = (position) => {\n        movingPart.style.transform = `translateX(${position}px)`\n        checkBtns()\n    }\n\n    const checkBtns = () => {\n        (position === 0) ? btnPrev.setAttribute('disabled', '') : btnPrev.removeAttribute('disabled');\n\n        (position <= -(slidesCount - slidesToShow) * slideWidth) ? btnNext.setAttribute('disabled', '') : btnNext.removeAttribute('disabled');\n    }\n\n    const movePrev = () => {\n        if (!btnPrev.hasAttribute('disabled')) {\n            const slidesLeft = Math.abs(position) / slideWidth\n            position += slidesLeft >= slidesToScroll ? movePosition : slidesLeft * slideWidth\n            setPosition(position)\n        }\n    }\n\n    const moveNext = () => {\n        if (!btnNext.hasAttribute('disabled')) {\n            const slidesLeft = slidesCount - (Math.abs(position) + slidesToShow * slideWidth) / slideWidth;\n            position -= slidesLeft >= slidesToScroll ? movePosition : slidesLeft * slideWidth;\n            setPosition(position)\n        }\n    }\n\n    const dragSlider = () => {\n        let oldPositionX = 0\n        let newPositionX = 0\n\n        movingPart.addEventListener('pointerdown', (event) => {\n            newPositionX = event.pageX\n            movingPart.style.cursor = 'grabbing'\n        })\n    \n        movingPart.addEventListener('pointerup', (event) => {\n            oldPositionX = newPositionX\n            newPositionX = event.pageX\n            if (newPositionX < oldPositionX) moveNext()\n            if (newPositionX > oldPositionX) movePrev()\n            movingPart.setAttribute('data-drag-slider', '')\n        })\n\n        // movingPart.addEventListener('pointerdown', (event) => newPositionX = event.pageX)\n    \n        // movingPart.addEventListener('pointerup', (event) => {\n        //     console.log(newPositionX)\n        //     oldPositionX = newPositionX\n        //     newPositionX = event.pageX\n        //     if (newPositionX < oldPositionX) moveNext()\n        //     if (newPositionX > oldPositionX) movePrev()\n        //     movingPart.setAttribute('data-drag-slider', '')\n        // })\n    }\n\n\n    const autoSlide = (btnPrev, btnNext) => {\n        setInterval(() => {\n            if (\n                !btnNext.hasAttribute('disabled') && \n                !btnNext.hasAttribute('data-click') && \n                !btnPrev.hasAttribute('data-click') && \n                !movingPart.hasAttribute('data-drag-slider')\n            ) {\n                timeLine.animate([\n                    { width: '0' },\n                    { width: '100%' }\n                  ], {\n                    duration: timeAutoSlide\n                })\n                setTimeout(moveNext, timeAutoSlide)\n            } else {\n                setTimeout(btnPrev.removeAttribute('data-click'), buttonDelay)\n                setTimeout(btnNext.removeAttribute('data-click'), buttonDelay)\n                setTimeout(movingPart.removeAttribute('data-drag-slider'), buttonDelay)\n            }\n        }, timeAutoSlide)\n    }\n\n    checkBtns()\n    // autoSlide(btnPrev, btnNext)\n    dragSlider()\n}"],"names":["window","onload","position","slidesToShow","highQuery","matchMedia","middleQuery","lowQuery","matches","slider","document","querySelector","content","movingPart","slide","querySelectorAll","btnPrev","btnNext","slidesCount","length","slideWidth","offsetWidth","movePosition","forEach","elem","style","width","addEventListener","setAttribute","movePrev","moveNext","oldPositionX","newPositionX","setPosition","transform","checkBtns","removeAttribute","hasAttribute","slidesLeft","Math","abs","event","pageX","cursor","loaded"],"sourceRoot":""}