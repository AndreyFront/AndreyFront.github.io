{"version":3,"file":"scripts.92b161892795a107c6f8.js","mappings":"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","sources":["webpack://webpack-template/./src/main.js","webpack://webpack-template/./src/scripts/slider.js"],"sourcesContent":["import './main.scss'\nimport Slider from './scripts/slider'\n\nwindow.onload = loaded()\n\nfunction loaded() {\n    const slider = document.querySelector('.slider')\n\n    if (window.matchMedia('(min-width: 767px)').matches) {\n        new Slider(slider, {\n            coutShowSlide: 4,\n            countFlipSlide: 1,\n            indentBetweenSlides: 40,\n            autoFlip: true,\n            timeAutoFlip: 4000\n        })\n    }\n    \n    if (window.matchMedia('(max-width: 767px)').matches) {\n        new Slider(slider, {\n            coutShowSlide: 2,\n            countFlipSlide: 1,\n            indentBetweenSlides: 40,\n            autoFlip: true,\n            timeAutoFlip: 4000\n        })\n    }\n    \n    if (window.matchMedia('(max-width: 421px)').matches) {\n        new Slider(slider, {\n            coutShowSlide: 1,\n            countFlipSlide: 1,\n            indentBetweenSlides: 20,\n            autoFlip: true,\n            timeAutoFlip: 4000\n        })\n    }\n}","// My lib\r\nexport default class Slider {\r\n    constructor(slider, options = {}) {\r\n        this.settings = {\r\n            coutShowSlide: options.coutShowSlide || 0,\r\n            countFlipSlide: options.countFlipSlide || 0,\r\n            indentBetweenSlides: options.indentBetweenSlides || 0,\r\n            autoFlip: options.autoFlip || false,\r\n            timeAutoFlip: options.timeAutoFlip || 0\r\n        }\r\n\r\n        this.slider = slider\r\n        this.sliderLine = this.slider.querySelector('.slider__line')\r\n        this.sliderSlides = this.slider.querySelectorAll('.slider__slide')\r\n        this.sliderBtnPrev = this.slider.querySelector('.slider__btn--prev') || false\r\n        this.sliderBtnNext = this.slider.querySelector('.slider__btn--next') || false\r\n        this.sliderTimeLine = this.slider.querySelector('.slider__time-line') || false\r\n        this.sliderWrapperLine = this.slider.querySelector('.slider__wrapper-line') || false\r\n\r\n        this.init = this.init.bind(this)\r\n        this.setEvents = this.setEvents.bind(this)\r\n        this.resizeSlider = this.resizeSlider.bind(this)\r\n        this.setPosition = this.setPosition.bind(this)\r\n        this.movePrev = this.movePrev.bind(this)\r\n        this.moveNext = this.moveNext.bind(this)\r\n        this.swipeStart = this.swipeStart.bind(this)\r\n        this.swipeEnd = this.swipeEnd.bind(this)\r\n        this.motion小heck = this.motion小heck.bind(this)\r\n        this.autoFlip = this.autoFlip.bind(this)\r\n        \r\n        this.init()\r\n        this.setEvents()\r\n        if (this.settings.autoFlip) this.autoFlip()\r\n    }\r\n\r\n    init() {\r\n        const slider = this.slider.getBoundingClientRect()\r\n        console.log(slider)\r\n        this.widthBetween = this.settings.indentBetweenSlides / this.settings.coutShowSlide\r\n        this.width = slider.width\r\n        this.valueMove = 0\r\n        this.autoStart = true\r\n        this.widthSlide = this.width / this.settings.coutShowSlide + this.widthBetween - this.settings.indentBetweenSlides\r\n        this.sliderSlides.forEach((slide, index) => {\r\n            slide.style.width = `${this.widthSlide}px`\r\n            if (index !== this.sliderSlides.length - 1) slide.style.marginRight = `${this.settings.indentBetweenSlides}px`\r\n        })\r\n    }\r\n\r\n    setEvents() {\r\n        this.debounceResizeSlider = debounce(this.resizeSlider, 100)\r\n        window.addEventListener('resize', this.debounceResizeSlider)\r\n\r\n        this.sliderLine.addEventListener('pointerdown', (evt) => {\r\n            this.swipeStart(evt)\r\n            if (this.settings.autoFlip) this.autoFlip(evt)\r\n        })\r\n\r\n        if (this.sliderBtnPrev) {\r\n            this.sliderBtnPrev.addEventListener('pointerdown', (evt) => {\r\n                if (this.settings.autoFlip) this.autoFlip(evt)\r\n                this.movePrev(evt)\r\n            })\r\n        }\r\n\r\n        if (this.sliderBtnNext) {\r\n            this.sliderBtnNext.addEventListener('pointerdown', (evt) => {\r\n                if (this.settings.autoFlip) this.autoFlip(evt)\r\n                this.moveNext(evt)\r\n            })\r\n        }\r\n    }\r\n\r\n    destroyEvents() {\r\n        window.removeEventListener('resize', this.debounceResizeSlider)\r\n        this.sliderLine.removeEventListener('pointerdown', (evt) => {\r\n            this.swipeStart(evt)\r\n            if (this.settings.autoFlip) this.autoFlip(evt)\r\n        })\r\n        this.sliderBtnPrev.removeEventListener('pointerdown', (evt) => {\r\n            if (this.settings.autoFlip) this.autoFlip(evt)\r\n            this.movePrev(evt)\r\n        })\r\n        this.sliderBtnNext.removeEventListener('pointerdown', (evt) => {\r\n            if (this.settings.autoFlip) this.autoFlip(evt)\r\n            this.moveNext(evt)\r\n        })\r\n    }\r\n\r\n    resizeSlider() {\r\n        this.init()\r\n    }\r\n\r\n    setPosition(position) {\r\n        this.valueMove = position\r\n        this.sliderLine.style.transform = `translate3d(${position}px, 0, 0)`\r\n    }\r\n\r\n    movePrev() {\r\n        this.valueMove = this.valueMove + (this.widthSlide + this.settings.indentBetweenSlides) * this.settings.countFlipSlide\r\n        const valueMove = this.motion小heck(this.valueMove)\r\n        this.setPosition(valueMove.valueMove)\r\n    }\r\n\r\n    moveNext() {\r\n        this.valueMove = this.valueMove - (this.widthSlide + this.settings.indentBetweenSlides) * this.settings.countFlipSlide\r\n        const valueMove = this.motion小heck(this.valueMove)\r\n        this.setPosition(valueMove.valueMove)\r\n    }\r\n\r\n    swipeStart(evt) {\r\n        this.swipeStartX = evt.clientX\r\n        window.addEventListener('pointermove', this.swipeEnd)\r\n    }\r\n\r\n    swipeEnd(evt) {\r\n        this.swipeEndX = evt.clientX\r\n        const swipeValue = this.swipeStartX - this.swipeEndX\r\n        \r\n        if (swipeValue > 0) this.moveNext()\r\n\r\n        if (swipeValue < 0) this.movePrev()\r\n\r\n        window.removeEventListener('pointermove', this.swipeEnd)\r\n    }\r\n\r\n    motion小heck(valueMove = 0) {\r\n        const leftEdge = 0\r\n        const rightEdge = -(this.sliderSlides.length - this.settings.coutShowSlide) * (this.widthSlide + this.settings.indentBetweenSlides)\r\n        if (valueMove <= leftEdge && valueMove >= rightEdge) {\r\n            // unlocking prev button and next button\r\n            return {\r\n                valueMove: valueMove\r\n            }\r\n        }\r\n\r\n        if (valueMove >= leftEdge) {\r\n            // Block prev button\r\n            return {\r\n                valueMove: rightEdge\r\n            }\r\n        }\r\n\r\n        if (valueMove <= rightEdge) {\r\n            // Block next button\r\n            return {\r\n                valueMove: leftEdge\r\n            }\r\n        }\r\n    }\r\n\r\n    autoFlip(slider) {\r\n        if (!slider) {\r\n            this.auto = setInterval(() => {\r\n                this.moveNext()\r\n                if (this.sliderTimeLine) {\r\n                    this.sliderTimeLine.animate([\r\n                        { width: '0' },\r\n                        { width: '100%' }\r\n                        ], {\r\n                        duration: this.settings.timeAutoFlip,\r\n                    })\r\n                }\r\n            }, this.settings.timeAutoFlip)\r\n        } else {\r\n            clearInterval(this.auto)\r\n            if (this.autoStart) {\r\n                this.autoStart = false\r\n                if (this.sliderTimeLine) {\r\n                    this.sliderTimeLine.animate([\r\n                        { width: '100%' },\r\n                        { width: '0' }\r\n                        ], {\r\n                        duration: 9000\r\n                    })\r\n                }\r\n                setTimeout(() => {\r\n                    this.autoStart = true\r\n                    if (this.settings.autoFlip) this.autoFlip()\r\n                }, 5000);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n// Helpers\r\n\r\nconst debounce = (fn, ms) => {\r\n    let timeout;\r\n    return function () {\r\n      const fnCall = () => { fn.apply(this, arguments) }\r\n      clearTimeout(timeout);\r\n      timeout = setTimeout(fnCall, ms)\r\n    };\r\n}"],"names":["slider","Slider","options","this","settings","coutShowSlide","countFlipSlide","indentBetweenSlides","autoFlip","timeAutoFlip","sliderLine","querySelector","sliderSlides","querySelectorAll","sliderBtnPrev","sliderBtnNext","sliderTimeLine","sliderWrapperLine","init","bind","setEvents","resizeSlider","setPosition","movePrev","moveNext","swipeStart","swipeEnd","motion小heck","getBoundingClientRect","console","log","widthBetween","width","valueMove","autoStart","widthSlide","forEach","slide","index","style","length","marginRight","debounceResizeSlider","debounce","window","addEventListener","evt","removeEventListener","position","transform","swipeStartX","clientX","swipeEndX","swipeValue","leftEdge","rightEdge","clearInterval","auto","animate","duration","setTimeout","setInterval","fn","ms","timeout","fnCall","apply","arguments","clearTimeout","onload","document","matchMedia","matches"],"sourceRoot":""}